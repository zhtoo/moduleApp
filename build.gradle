apply from: 'constants.gradle'

buildscript {

    ext.kotlin_version = '1.7.20'

    repositories {

//        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
//        maven { url "https://maven.aliyun.com/nexus/content/repositories/releases" }
//
//        maven { url "https://mirrors.cloud.tencent.com/nexus/repository/maven-public/" }
//
//        maven { url 'https://plugins.gradle.org/m2/' }
//
//        maven { url 'https://repo1.maven.org/maven2/' }
        maven { url "https://www.jitpack.io" }

        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
//        maven { url 'https://maven.google.com' }

    }

    dependencies {
        classpath "com.android.tools.build:gradle:7.3.1"

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    }
}

allprojects {
    repositories {

//        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
//        maven { url "https://maven.aliyun.com/nexus/content/repositories/releases" }
//
//        maven { url "https://mirrors.cloud.tencent.com/nexus/repository/maven-public/" }
//
//        maven { url 'https://plugins.gradle.org/m2/' }
//
//        maven { url 'https://repo1.maven.org/maven2/' }
        maven { url "https://www.jitpack.io" }

        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
//        maven { url 'https://maven.google.com' }

        flatDir {
            // 由于Library module中引用的aar，在多module的情况下，
            // 其他的module编译会报错，所以需要在所有工程的repositories
            // 下把Library module中的libs目录添加到依赖关系中
            dirs 'libs'
            dirs project(':modulelibrary').file('libs') //借助 project()函数的位置查找
            //dirs '../baseapp/libs'  // 直接指明路径，注意前边的../, 要先回到根目录去查找别的module
        }

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}



plugins {
    id 'com.android.application'
}

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true

        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }

        testInstrumentationRunner "androidx.testCode.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.android.jdk
        targetCompatibility rootProject.ext.android.jdk
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterCompiler"

    implementation project(':modulecommon')
//
    if (!isModuleMain.toBoolean()) {
        implementation project(':modulemain')
    }
    //首页
    if (!isModuleHome.toBoolean()) {
        implementation project(':modulehome')
    }
    //工具
    if (!isModuleTools.toBoolean()) {
        implementation project(':moduletool')
    }
    if (!isModuleLibrary.toBoolean()) {
        implementation project(':modulelibrary')
    }
    if (!isModuleView.toBoolean()) {
        implementation project(':moduleview')
    }
    if (!isModulePersonal.toBoolean()) {
        implementation project(':modulepersonal')
    }

}
